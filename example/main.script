local s3d_render = require("example.scene3d.render")

local TOY_COUNT = 2
local SCALE = vmath.vector3(1)

function init(self)
    msg.post(".", "acquire_input_focus")
    msg.post("@render:", "clear_color", { color = vmath.vector4(0.9, 0.9, 0.9, 1.0) })

    s3d_render.view_position = go.get_position()
    s3d_render.update_camera(270, 0)

    self.toys = {}
end

function final(self)
end

function update(self, dt)
    self.frame_counter = (self.frame_counter or 0) + 1

    if self.frame_counter == 1 then
        for i = #self.toys, TOY_COUNT do
            local a = (i - 1) / TOY_COUNT * math.pi * 2
            local pos = vmath.vector3(math.cos(a) * 120, math.sin(a) * 120, 0)
            local toy_id = factory.create("#factory", pos, nil, nil, SCALE)
            table.insert(self.toys, toy_id)

            -- msg.post(msg.url(nil, toy_id, "mesh"), "disable")
        end
    end

    if self.frame_counter == 3 then
        while #self.toys > 0 do
            local toy_id = table.remove(self.toys, 1)
            go.delete(toy_id)
        end

        self.frame_counter = 0
    end
end

function on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
    if action_id == hash("key_space") and action.pressed then
        if self.extra_id then
            go.delete(self.extra_id)
            self.extra_id = nil
        else
            local pos = vmath.vector3(0, -120, 0)
            local toy_id = factory.create("#factory", pos, nil, nil, SCALE)
            self.extra_id = toy_id

            go.set(msg.url(nil, toy_id, "mesh"), "tint", vmath.vector4(1.0, 0.0, 0.0, 0.0))
        end
    end

    if action_id == hash("key_enter") and action.pressed then
        if self.extra_id then
            msg.post(msg.url(nil, self.extra_id, "mesh"), "disable")
        end
    end
end
